[{"C:\\Users\\samue\\surfoutlet-front\\src\\pages\\ProductsCard.jsx":"1","C:\\Users\\samue\\surfoutlet-front\\src\\components\\Utils\\Box\\index.jsx":"2","C:\\Users\\samue\\surfoutlet-front\\src\\App.js":"3","C:\\Users\\samue\\surfoutlet-front\\src\\components\\Header\\index.jsx":"4","C:\\Users\\samue\\surfoutlet-front\\src\\services\\api.js":"5","C:\\Users\\samue\\surfoutlet-front\\src\\selectors\\products.js":"6","C:\\Users\\samue\\surfoutlet-front\\src\\components\\ProductsSlider\\index.jsx":"7","C:\\Users\\samue\\surfoutlet-front\\src\\components\\ProductCardList\\index.jsx":"8","C:\\Users\\samue\\surfoutlet-front\\src\\components\\FloatCart\\index.js":"9","C:\\Users\\samue\\surfoutlet-front\\src\\components\\Products\\ProductCard.jsx":"10","C:\\Users\\samue\\surfoutlet-front\\src\\actions\\products.js":"11","C:\\Users\\samue\\surfoutlet-front\\src\\actions\\filters.js":"12","C:\\Users\\samue\\surfoutlet-front\\src\\components\\Thumb\\index.js":"13","C:\\Users\\samue\\surfoutlet-front\\src\\reducers\\filtersReducer.js":"14","C:\\Users\\samue\\surfoutlet-front\\src\\components\\Filter\\Filter.jsx":"15","C:\\Users\\samue\\surfoutlet-front\\src\\pages\\Payment.jsx":"16","C:\\Users\\samue\\surfoutlet-front\\src\\components\\CarouselImage\\imageData.js":"17","C:\\Users\\samue\\surfoutlet-front\\src\\components\\Utils\\NumeratedTitle\\index.js":"18","C:\\Users\\samue\\surfoutlet-front\\src\\components\\Utils\\PaymentBox\\index.js":"19","C:\\Users\\samue\\surfoutlet-front\\src\\components\\Utils\\Separation\\index.jsx":"20","C:\\Users\\samue\\surfoutlet-front\\src\\components\\Filter\\index.jsx":"21","C:\\Users\\samue\\surfoutlet-front\\src\\components\\Products\\ProductDetails.jsx":"22","C:\\Users\\samue\\surfoutlet-front\\src\\pages\\Landing.jsx":"23","C:\\Users\\samue\\surfoutlet-front\\src\\components\\Utils\\Title\\index.jsx":"24","C:\\Users\\samue\\surfoutlet-front\\src\\components\\DetailsProduct\\index.jsx":"25","C:\\Users\\samue\\surfoutlet-front\\src\\components\\FloatCart\\CartProduct\\index.js":"26","C:\\Users\\samue\\surfoutlet-front\\src\\reducers\\productsReducer.js":"27","C:\\Users\\samue\\surfoutlet-front\\src\\components\\CarouselImage\\index.jsx":"28"},{"size":266,"mtime":1611929677616,"results":"29","hashOfConfig":"30"},{"size":197,"mtime":1609797394368,"results":"31","hashOfConfig":"30"},{"size":352,"mtime":1611671030997,"results":"32","hashOfConfig":"30"},{"size":3137,"mtime":1611523862394,"results":"33","hashOfConfig":"30"},{"size":130,"mtime":1611603044552,"results":"34","hashOfConfig":"30"},{"size":1531,"mtime":1612275740971,"results":"35","hashOfConfig":"30"},{"size":2527,"mtime":1612266705791,"results":"36","hashOfConfig":"30"},{"size":1751,"mtime":1612190709766,"results":"37","hashOfConfig":"30"},{"size":3100,"mtime":1612277737490,"results":"38","hashOfConfig":"30"},{"size":1461,"mtime":1612277675877,"results":"39","hashOfConfig":"30"},{"size":300,"mtime":1612274057651,"results":"40","hashOfConfig":"30"},{"size":542,"mtime":1611929677577,"results":"41","hashOfConfig":"30"},{"size":358,"mtime":1611523862610,"results":"42","hashOfConfig":"30"},{"size":1018,"mtime":1611927632821,"results":"43","hashOfConfig":"30"},{"size":3314,"mtime":1612188200917,"results":"44","hashOfConfig":"30"},{"size":12045,"mtime":1611523862664,"results":"45","hashOfConfig":"30"},{"size":726,"mtime":1611523862252,"results":"46","hashOfConfig":"30"},{"size":360,"mtime":1611523862611,"results":"47","hashOfConfig":"30"},{"size":538,"mtime":1611523862612,"results":"48","hashOfConfig":"30"},{"size":297,"mtime":1609797394372,"results":"49","hashOfConfig":"30"},{"size":10748,"mtime":1612266088913,"results":"50","hashOfConfig":"30"},{"size":4375,"mtime":1612274428484,"results":"51","hashOfConfig":"30"},{"size":397,"mtime":1611523862663,"results":"52","hashOfConfig":"30"},{"size":176,"mtime":1609797394374,"results":"53","hashOfConfig":"30"},{"size":612,"mtime":1612266386350,"results":"54","hashOfConfig":"30"},{"size":1969,"mtime":1612276894279,"results":"55","hashOfConfig":"30"},{"size":20594,"mtime":1612277871282,"results":"56","hashOfConfig":"30"},{"size":1475,"mtime":1611523862253,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"37zptr",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\samue\\surfoutlet-front\\src\\pages\\ProductsCard.jsx",["120"],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\Utils\\Box\\index.jsx",[],["121","122"],"C:\\Users\\samue\\surfoutlet-front\\src\\App.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\Header\\index.jsx",["123","124"],"import React, {useState} from 'react'\r\nimport {TextField, InputAdornment} from '@material-ui/core'\r\nimport {Search, AccountCircle, AddShoppingCart} from '@material-ui/icons'\r\nimport {FaBars} from 'react-icons/fa'\r\nimport './header.css'\r\nimport { Link } from 'react-router-dom'\r\nimport FloatCart from '../FloatCart'\r\n\r\nfunction Header() {\r\n    const [search, setSearch] = useState('')\r\n    const [sidebar, setSidebar] = useState(false)\r\n\r\n    const showSideBar = () => setSidebar(!sidebar)\r\n\r\n    return (\r\n        <header id='header'>\r\n            <nav className='header-top'>\r\n                <div className=\"navbar\">\r\n                    <a onClick={showSideBar} href='#' className='menu-bars'>\r\n                        <FaBars />\r\n                    </a>\r\n                </div>\r\n                <a href='/' className='header-logo'>Molokai</a>\r\n                <form onSubmit={(e) => {\r\n                    e.preventDefault()\r\n                    console.log(search)\r\n                }}>\r\n                    <TextField\r\n                        value={search}\r\n                        onChange={(e) => {setSearch(e.target.value)}}\r\n                        InputProps={{endAdornment: (<InputAdornment position='end'><Search color='primary' className='logo-input' /></InputAdornment>)}}\r\n                        placeholder='Digite o que vocÃª procura' \r\n                        variant='outlined'\r\n                        size='small'\r\n                        className='header-input'\r\n                        type='text'\r\n                    />\r\n                </form>\r\n                <nav className='nav-container'>\r\n                    <Link to='#' className='nav-item'>\r\n                        <AccountCircle fontSize=\"large\" />\r\n                        <p className='nav-item-legenda'>Entre ou cadastre-se</p>\r\n                    </Link>\r\n                    <div className=\"nav-item\">\r\n                        <FloatCart />\r\n                    </div>\r\n                </nav>\r\n            </nav>\r\n            <nav onClick={showSideBar} className={sidebar ? 'menu-container active' : 'menu-container'}>\r\n                <div className='sidebar-top'>\r\n                    <Link to='#' className='sidebar-item'>\r\n                        <AccountCircle fontSize=\"large\" />\r\n                        <p className='nav-item-legenda'>Entre ou cadastre-se</p>\r\n                    </Link>\r\n                </div>\r\n                <a href='/products' className='menu-item'>Surf</a>\r\n                <a href='/products' className='menu-item'>Masculino</a>\r\n                <a href='/products' className='menu-item'>Feminino</a>\r\n                <a href='/products' className='menu-item'>CalÃ§ados</a>\r\n                <a href='/products' className='menu-item'>Juvenil</a>\r\n                <a href='/products' className='menu-item'>Ãculos</a>\r\n                <a href='/products' className='menu-item'>RelÃ³gios</a>\r\n                <a href='/products' className='menu-item'>AcessÃ³rios</a>\r\n                <a href='/products' className='menu-item'>Marcas</a>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;",["125","126"],"C:\\Users\\samue\\surfoutlet-front\\src\\services\\api.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\selectors\\products.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\ProductsSlider\\index.jsx",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\ProductCardList\\index.jsx",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\FloatCart\\index.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\Products\\ProductCard.jsx",[],"C:\\Users\\samue\\surfoutlet-front\\src\\actions\\products.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\actions\\filters.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\Thumb\\index.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\reducers\\filtersReducer.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\Filter\\Filter.jsx",["127"],"C:\\Users\\samue\\surfoutlet-front\\src\\pages\\Payment.jsx",["128","129"],"import React, {useState, useEffect} from 'react'\r\nimport NumeratedTitled from '../components/Utils/NumeratedTitle'\r\nimport PaymentBox from '../components/Utils/PaymentBox'\r\nimport {Button, TextField, Select} from '@material-ui/core'\r\nimport api from '../services/api'\r\n\r\nimport '../styles/payment.css'\r\n\r\nfunction Payment() {\r\n    const [personalData, setPersonalData] = useState([])\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const [address, setAddress] = useState('Rodovia Jornalista Manoel de Menezes')\r\n    const [number, setNumber] = useState('2051')\r\n    const [complement, setComplement] = useState('Casa 10')\r\n    const [cep, setCep] = useState('88061-700')\r\n    const [state, setState] = useState('SC')\r\n    const [city, setCity] = useState('FlorianÃ³polis')\r\n    const [neighborhood, setNeighborhood] = useState('Barra da Lagoa')\r\n\r\n    const [paymentType, setPaymentType] = useState(0)\r\n    const [cardType, setCardType] = useState('')\r\n    const [installments, setInstallments] = useState('')\r\n    const [cardNumber, setCardNumber] = useState('')\r\n    const [valid, setValid] = useState('')\r\n    const [cvv, setCvv] = useState('')\r\n\r\n    const token = sessionStorage.getItem('key')\r\n\r\n    useEffect(() => getUserData(), [edit])\r\n\r\n    async function getUserData() {\r\n        api.defaults.headers.common['Authorization'] = 'Bearer ' + token\r\n        await api.get('/usuario')\r\n        .then((res) => {\r\n            setPersonalData(res.data)\r\n        })\r\n        .catch(() => alert('NÃ£o foi possÃ­vel pegar os dados!'))\r\n    }\r\n\r\n    function handleEditAddress() {\r\n        if(edit) {\r\n            setEdit(false)\r\n            console.log('editando')\r\n        } else {\r\n            setEdit(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='payment-container'>\r\n            <div className='payment-top-container'>\r\n                <div>\r\n                    <NumeratedTitled number='1' title='Dados Pessoais' />\r\n                    <PaymentBox type={3}>\r\n                        <div className='payment-box-data'>\r\n                            <p>{personalData.nomeCompleto}</p>\r\n                            <p>{personalData.email}</p>\r\n                            <p>{personalData.telefone}</p>\r\n                            <p>{personalData.cpf}</p>\r\n                        </div>\r\n                    </PaymentBox>\r\n                </div>\r\n                <div>\r\n                    <NumeratedTitled number='2' title='Entrega' />\r\n                    <PaymentBox type={1} onClick={handleEditAddress}>\r\n                        <form className='payment-box-data'>\r\n                            <TextField \r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                id='address'\r\n                                label='EndereÃ§o'\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                className='white-background'\r\n                                size=\"small\"\r\n                                InputProps={{\r\n                                    readOnly: !edit,\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className='line-input'>\r\n                                <div className='first-line-input'>\r\n                                    <TextField \r\n                                        value={number}\r\n                                        onChange={(e) => setNumber(e.target.value)}\r\n                                        id='number'\r\n                                        label='NÃºmero'\r\n                                        variant='outlined'\r\n                                        margin='normal'\r\n                                        className='white-background'\r\n                                        size=\"small\"\r\n                                        InputProps={{\r\n                                            readOnly: !edit,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <TextField \r\n                                    value={complement}\r\n                                    onChange={(e) => setComplement(e.target.value)}\r\n                                    id='complement'\r\n                                    label='Complemento'\r\n                                    variant='outlined'\r\n                                    margin='normal'\r\n                                    className='white-background'\r\n                                    size=\"small\"\r\n                                    InputProps={{\r\n                                        readOnly: !edit,\r\n                                    }}\r\n                                    fullWidth\r\n                                />\r\n                            </div>\r\n                            <TextField \r\n                                value={cep}\r\n                                onChange={(e) => setCep(e.target.value)}\r\n                                id='cep'\r\n                                label='CEP'\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                className='white-background'\r\n                                size=\"small\"\r\n                                InputProps={{\r\n                                    readOnly: !edit,\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className='line-input'>\r\n                                <div className='first-line-input'>\r\n                                    <TextField \r\n                                        value={state}\r\n                                        onChange={(e) => setState(e.target.value)}\r\n                                        id='state'\r\n                                        label='Estado'\r\n                                        variant='outlined'\r\n                                        margin='normal'\r\n                                        className='white-background'\r\n                                        size=\"small\"\r\n                                        InputProps={{\r\n                                            readOnly: !edit,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <TextField \r\n                                    value={city}\r\n                                    onChange={(e) => setCity(e.target.value)}\r\n                                    id='city'\r\n                                    label='Cidade'\r\n                                    variant='outlined'\r\n                                    margin='normal'\r\n                                    className='white-background'\r\n                                    size=\"small\"\r\n                                    InputProps={{\r\n                                        readOnly: !edit,\r\n                                    }}\r\n                                    fullWidth\r\n                                />\r\n                            </div>\r\n                            <TextField \r\n                                value={neighborhood}\r\n                                onChange={(e) => setNeighborhood(e.target.value)}\r\n                                id='neighborhood'\r\n                                label='Bairro'\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                className='white-background'\r\n                                size=\"small\"\r\n                                InputProps={{\r\n                                    readOnly: !edit,\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <p>R$ 20,00</p>\r\n                        </form>\r\n                    </PaymentBox>\r\n                </div>\r\n            </div>\r\n            <div className='payment-bottom-container'>\r\n                <NumeratedTitled number='3' title='Pagamento' />\r\n                <div className='payment-data'>\r\n                    <Select\r\n                        native\r\n                        value={paymentType}\r\n                        onChange={(e) => setPaymentType(e.target.value)}\r\n                        onBlur={() => console.log(paymentType)}\r\n                        variant='filled'\r\n                    >\r\n                        <option defaultChecked value={0}>Forma pagamento</option>\r\n                        <option value={1}>CartÃ£o</option>\r\n                        <option value={2}>Boleto</option>\r\n                    </Select>\r\n                    {paymentType == 1 ?\r\n                    <PaymentBox type={2}>\r\n                        <Select\r\n                            native\r\n                            value={cardType}\r\n                            onChange={(e) => setCardType(e.target.value)}\r\n                            variant='outlined'\r\n                            className='white-background'\r\n                            fullWidth\r\n                        >\r\n                            <option defaultChecked value=''>Tipo CartÃ£o</option>\r\n                            <option value='credit'>CrÃ©dito</option>\r\n                            <option value='debit'>DÃ©bito</option>\r\n                        </Select>\r\n                        <TextField \r\n                            value={installments}\r\n                            onChange={(e) => setInstallments(e.target.value)}\r\n                            id='installments'\r\n                            label='parcelas'\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            type='number'\r\n                            className='white-background'\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            value={cardNumber}\r\n                            onChange={(e) => setCardNumber(e.target.value)}\r\n                            id='cardNumber'\r\n                            label='NÃºmero do cartÃ£o'\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            className='white-background'\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            value={valid}\r\n                            onChange={(e) => setValid(e.target.value)}\r\n                            id='valid'\r\n                            label='Validade'\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            className='white-background'\r\n                            required\r\n                        />\r\n                        <div className='first-line-input'>\r\n                            <TextField \r\n                                value={cvv}\r\n                                onChange={(e) => setCvv(e.target.value)}\r\n                                id='cvv'\r\n                                label='CVV'\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                type='number'\r\n                                className='white-background'\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </PaymentBox> : ''}\r\n                </div>\r\n            </div>\r\n            <div className='payment-button-container'>\r\n                <Button variant='contained' color='primary'>Finalizar compra</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n",["130","131"],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\CarouselImage\\imageData.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\Utils\\NumeratedTitle\\index.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\Utils\\PaymentBox\\index.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\Utils\\Separation\\index.jsx",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\Filter\\index.jsx",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\Products\\ProductDetails.jsx",[],"C:\\Users\\samue\\surfoutlet-front\\src\\pages\\Landing.jsx",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\Utils\\Title\\index.jsx",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\DetailsProduct\\index.jsx",["132"],"import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getAllProducts } from '../../selectors/products'\r\n \r\nimport ProductDetails from '../Products/ProductDetails'\r\n\r\n \r\nconst DetailsProduct = () => {\r\n\r\n    const param = useParams()\r\n\r\n    const prodID = (param.id - 1) \r\n    \r\n    const products = useSelector(getAllProducts)\r\n\r\n    const productID = products[prodID]\r\n    \r\n    return (\r\n        <div>\r\n            <ProductDetails product={productID} key={prodID}/>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailsProduct","C:\\Users\\samue\\surfoutlet-front\\src\\components\\FloatCart\\CartProduct\\index.js",["133"],"C:\\Users\\samue\\surfoutlet-front\\src\\reducers\\productsReducer.js",[],"C:\\Users\\samue\\surfoutlet-front\\src\\components\\CarouselImage\\index.jsx",[],{"ruleId":"134","severity":1,"message":"135","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":13},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"134","severity":1,"message":"142","line":3,"column":32,"nodeType":"136","messageId":"137","endLine":3,"endColumn":47},{"ruleId":"143","severity":1,"message":"144","line":19,"column":21,"nodeType":"145","endLine":19,"endColumn":77},{"ruleId":"138","replacedBy":"146"},{"ruleId":"140","replacedBy":"147"},{"ruleId":"134","severity":1,"message":"148","line":18,"column":11,"nodeType":"136","messageId":"137","endLine":18,"endColumn":28},{"ruleId":"149","severity":1,"message":"150","line":30,"column":36,"nodeType":"151","endLine":30,"endColumn":42,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":191,"column":34,"nodeType":"155","messageId":"156","endLine":191,"endColumn":36},{"ruleId":"138","replacedBy":"157"},{"ruleId":"140","replacedBy":"158"},{"ruleId":"134","severity":1,"message":"159","line":1,"column":16,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"160","line":12,"column":19,"nodeType":"136","messageId":"137","endLine":12,"endColumn":29},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"'AddShoppingCart' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["161"],["162"],"'handleFilterBrand' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["163"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["161"],["162"],"'useEffect' is defined but never used.","'setProduct' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},"Update the dependencies array to be: [edit, getUserData]",{"range":"166","text":"167"},[1240,1246],"[edit, getUserData]"]